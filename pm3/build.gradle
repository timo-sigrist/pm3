/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // Support for Java
    id 'java'
    // Support for JavaFX
    id 'org.openjfx.javafxplugin' version '0.0.13'

    id("name.remal.sonarlint") version "3.0.8"

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    jcenter()
     maven { url 'https://jitpack.io' }
}

javafx {
    version = '19.0.2'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
    // Use JUnit Jupiter for testing.
    implementation("org.junit.jupiter:junit-jupiter:5.9.2")

    // https://mvnrepository.com/artifact/com.h2database/h2
    testImplementation 'com.h2database:h2:1.3.148'


    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://mvnrepository.com/artifact/net.jodah/typetools
    implementation 'net.jodah:typetools:0.4.1'

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation 'org.mockito:mockito-core:2.22.0'

    implementation group: 'com.jfoenix', name: 'jfoenix', version: '9.0.1'

    //implementation "mysql:mysql-connector-java:8.0.31"


    //mysql and JPA
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    implementation 'org.hibernate:hibernate-core:5.6.3.Final'

    //Password encryption
    implementation 'org.mindrot:jbcrypt:0.4'

    // // JavaFX testing
    // testImplementation 'org.testfx:testfx-junit5:4.0.16-alpha'
    // testImplementation 'org.testfx:openjfx-monocle:8u76-b04'

    // testImplementation 'org.testfx:testfx-core:4.0.16-alpha'

}


sonarLint {
  isGeneratedCodeIgnored = false // `true` by default, set to `false` to validate generated code (code inside `./build/`)

  rules {
    enable(
      'java:S100', // Enable `java:S100` rule (that is disabled by default)
      'java:S101', // Enable `java:S101` rule (that is disabled by default)
    )
    enabled = ['java:S100'] // `enabled` - a mutable collection of enabled rules

    disable(
      'java:S1000', // Disable `java:S1000` rule
      'java:S1001', // Disable `java:S1001` rule
    )
    disabled = ['java:S1000'] // `disabled` - a mutable collection of disabled rules

    rule('java:S100') {
      property('format', '^[a-z][a-zA-Z0-9]*$') // Configure `format` property for `java:S100` rule
      properties = ['format': '^[a-z][a-zA-Z0-9]*$'] // `properties` - a mutable map of rule properties
    }
  }

  sonarProperty('sonar.nodejs.executable', '/usr/bin/node') // configure Node.js executable path via `sonar.nodejs.executable` Sonar property
  sonarProperties = ['sonar.nodejs.executable': '/usr/bin/node'] // `sonarProperties` - a mutable map of Sonar properties

  testSourceSets = sourceSets.matching { true } // Which source-sets contain test sources. Source-sets created by plugins like `name.remal.test-source-sets` are automatically integrated. Most probably, you don't have to configure anything yourself.

  // `sonarLint` extension extends `CodeQualityExtension` (see https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/quality/CodeQualityExtension.html).
  // You can use all fields of `CodeQualityExtension` the same way as for `checkstyle`, for example.
}


// check.dependsOn sonarlintMain

// Java plugin configuration
java {
    // By default the Java version of the gradle process is used as source/target version.
    // This can be overridden, to ensure a specific version. Enable only if required.
    sourceCompatibility = JavaVersion.VERSION_17 // ensure Java source code compatibility
    // targetCompatibility = JavaVersion.VERSION_17 // version of the created byte-code

    // Java compiler specific options
    compileJava {
        // source files should be UTF-8 encoded
        options.encoding = 'UTF-8'
        // for more options see https://docs.gradle.org/current/dsl/org.gradle.api.tasks.compile.CompileOptions.html
    }
}

application {
    // Define the main class for the application.
    mainClass = 'app.App'
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    systemProperty 'java.awt.headless', 'true'
    systemProperty 'testfx.headless', 'true'
    systemProperty 'testfx.robot', 'glass'
    systemProperty 'prism.order', 'sw'
}